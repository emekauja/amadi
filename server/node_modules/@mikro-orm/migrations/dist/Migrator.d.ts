import { EntityManager } from '@mikro-orm/knex';
export declare class Migrator {
    private readonly em;
    private readonly umzug;
    private readonly driver;
    private readonly schemaGenerator;
    private readonly config;
    private readonly options;
    private readonly runner;
    private readonly generator;
    private readonly storage;
    constructor(em: EntityManager);
    createMigration(path?: string, blank?: boolean): Promise<MigrationResult>;
    getExecutedMigrations(): Promise<MigrationRow[]>;
    getPendingMigrations(): Promise<UmzugMigration[]>;
    up(options?: string | string[] | MigrateOptions): Promise<UmzugMigration[]>;
    down(options?: string | string[] | MigrateOptions): Promise<UmzugMigration[]>;
    protected resolve(file: string): {
        up: () => Promise<void>;
        down: () => Promise<void>;
    };
    private getSchemaDiff;
    private prefix;
    private runMigrations;
}
export declare type UmzugMigration = {
    path?: string;
    file: string;
};
export declare type MigrateOptions = {
    from?: string | number;
    to?: string | number;
    migrations?: string[];
};
export declare type MigrationResult = {
    fileName: string;
    code: string;
    diff: string[];
};
export declare type MigrationRow = {
    name: string;
    executed_at: Date;
};
